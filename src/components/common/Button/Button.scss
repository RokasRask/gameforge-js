// Button.scss
// Styles for the 8-bit button component

@import '../../styles/variables';
@import '../../styles/mixins';

.pixel-button {
  display: inline-block;
  position: relative;
  font-family: $font-family-pixel;
  font-size: $font-size-md;
  padding: $spacing-sm $spacing-md;
  background-color: $color-white;
  color: $color-black;
  border: 4px solid $color-black;
  text-align: center;
  text-transform: uppercase;
  cursor: pointer;
  user-select: none;
  transition: transform $transition-speed-fast, box-shadow $transition-speed-fast;
  box-shadow: 4px 4px 0 0 $color-black;
  text-decoration: none;

  // Button content container
  &__content {
    position: relative;
    z-index: 1;
  }

  // Button shadow (for 3D effect)
  &__shadow {
    position: absolute;
    bottom: -4px;
    right: -4px;
    width: 100%;
    height: 100%;
    background-color: $color-black;
    z-index: -1;
    transition: transform $transition-speed-fast;
  }

  // Button hover state
  &:hover {
    transform: translate(-2px, -2px);
    box-shadow: 6px 6px 0 0 $color-black;

    .pixel-button__shadow {
      transform: translate(2px, 2px);
    }
  }

  // Button active/pressed state
  &:active {
    transform: translate(2px, 2px);
    box-shadow: 2px 2px 0 0 $color-black;

    .pixel-button__shadow {
      transform: translate(-2px, -2px);
    }
  }

  // Button focus state
  &:focus {
    outline: none;
    box-shadow: 4px 4px 0 0 $color-black, 0 0 0 2px rgba($color-primary, 0.5);
  }

  // Button disabled state
  &:disabled {
    cursor: not-allowed;
    opacity: 0.7;
    transform: none;
    box-shadow: 2px 2px 0 0 rgba($color-black, 0.5);

    .pixel-button__shadow {
      transform: none;
      opacity: 0.5;
    }

    &:hover {
      transform: none;
      box-shadow: 2px 2px 0 0 rgba($color-black, 0.5);
    }
  }

  // Button variants
  &--primary {
    background-color: $color-primary;
    color: $color-white;

    &:focus {
      box-shadow: 4px 4px 0 0 $color-black, 0 0 0 2px rgba($color-white, 0.5);
    }
  }

  &--secondary {
    background-color: $color-secondary;
    color: $color-white;
  }

  &--success {
    background-color: $color-success;
    color: $color-dark-gray;
  }

  &--danger {
    background-color: $color-danger;
    color: $color-white;
  }

  &--warning {
    background-color: $color-warning;
    color: $color-dark-gray;
  }

  // Button sizes
  &--small {
    font-size: $font-size-sm;
    padding: $spacing-xs $spacing-sm;
  }

  &--large {
    font-size: $font-size-lg;
    padding: $spacing-md $spacing-lg;
  }

  // Full width button
  &--block {
    display: block;
    width: 100%;
  }

  // Icon button
  &--icon {
    padding: $spacing-sm;
    display: inline-flex;
    align-items: center;
    justify-content: center;

    svg,
    img {
      width: 1.2em;
      height: 1.2em;
    }
  }

  // Button with icon and text
  &--with-icon {
    display: inline-flex;
    align-items: center;

    svg,
    img {
      margin-right: $spacing-sm;
      width: 1.2em;
      height: 1.2em;
    }

    &.pixel-button--icon-right {

      svg,
      img {
        margin-right: 0;
        margin-left: $spacing-sm;
        order: 2;
      }

      .pixel-button__content {
        order: 1;
      }
    }
  }

  // Button variants based on theme
  .theme-nes & {
    &--primary {
      background-color: var(--primary-color);
    }

    &--secondary {
      background-color: var(--secondary-color);
    }
  }

  .theme-gameboy & {
    border-width: 2px;
    box-shadow: 2px 2px 0 0 $color-black;

    &--primary {
      background-color: var(--primary-color);
    }

    &--secondary {
      background-color: var(--secondary-color);
    }
  }

  .theme-arcade & {
    border-color: #ff00ff;
    box-shadow: 4px 4px 0 0 #0000ff;

    &--primary {
      background-color: var(--primary-color);
      border-color: #ff00ff;
    }

    &--secondary {
      background-color: var(--secondary-color);
      border-color: #00ffff;
    }
  }
}